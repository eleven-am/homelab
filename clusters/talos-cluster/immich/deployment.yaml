apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
  labels:
    app: immich-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: immich-server
  template:
    metadata:
      labels:
        app: immich-server
    spec:
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:v2.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2283
              name: http
              protocol: TCP
          env:
            - name: DB_HOSTNAME
              value: pgbouncer-service.postgres.svc.cluster.local
            - name: DB_PORT
              value: "5432"
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: DB_PASSWORD
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: DB_DATABASE_NAME
            - name: REDIS_HOSTNAME
              value: redis-service.redis.svc.cluster.local
            - name: REDIS_PORT
              value: "6379"
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: JWT_SECRET
            - name: IMMICH_WEB_URL
              value: http://immich-server:2283
            - name: IMMICH_SERVER_URL
              value: http://immich-server:2283
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: upload
              mountPath: /usr/src/app/upload/upload
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /api/server-info/ping
              port: 2283
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/server-info/ping
              port: 2283
            initialDelaySeconds: 30
            periodSeconds: 10
      restartPolicy: Always
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: immich-library
        - name: upload
          persistentVolumeClaim:
            claimName: immich-upload
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
  labels:
    app: immich-machine-learning
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: immich-machine-learning
  template:
    metadata:
      labels:
        app: immich-machine-learning
    spec:
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:v2.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3003
              name: http
              protocol: TCP
          env:
            - name: MACHINE_LEARNING_CACHE_FOLDER
              value: /cache
          volumeMounts:
            - name: model-cache
              mountPath: /cache
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /ping
              port: 3003
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ping
              port: 3003
            initialDelaySeconds: 30
            periodSeconds: 10
      restartPolicy: Always
      volumes:
        - name: model-cache
          persistentVolumeClaim:
            claimName: immich-model-cache
