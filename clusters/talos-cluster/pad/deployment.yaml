apiVersion: apps/v1
kind: Deployment
metadata:
  name: pad
  namespace: pad
  labels:
    app: pad
    version: latest
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: pad
  template:
    metadata:
      labels:
        app: pad
        version: latest
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/health"
    spec:
      # Security context for proper permissions
      securityContext:
        fsGroup: 1001  # nodejs group from Dockerfile
      
      # Init container to fix NFS volume permissions
      initContainers:
        - name: fix-permissions
          image: busybox:1.36-musl
          command:
            - sh
            - -c
            - |
              echo "Fixing permissions for NFS volumes..."
              mkdir -p /app/data /app/public/uploads
              chown -R 1001:1001 /app/data /app/public/uploads
              chmod -R 755 /app/data /app/public/uploads
              echo "Permissions fixed successfully"
              echo "Data directory:"
              ls -la /app/data
              echo "Uploads directory:"
              ls -la /app/public/uploads
          volumeMounts:
            - name: data-storage
              mountPath: /app/data
            - name: uploads-storage
              mountPath: /app/public/uploads
          securityContext:
            runAsUser: 0
            runAsGroup: 0

      containers:
        - name: pad
          image: ghcr.io/eleven-am/pad:0.0.29
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP

          # Environment variables from ConfigMap
          envFrom:
            - configMapRef:
                name: pad-config

          # Environment variables from Secret
          env:
            - name: BETTER_AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: pad-secrets
                  key: BETTER_AUTH_SECRET
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: pad-secrets
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: pad-secrets
                  key: GOOGLE_CLIENT_SECRET

          # Volume mounts
          volumeMounts:
            - name: data-storage
              mountPath: /app/data
            - name: uploads-storage
              mountPath: /app/uploads

          # Health checks - give more time for migration on startup
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60  # Increased for migration time
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30  # Increased for migration time
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3

          # Startup probe for slow initialization (including migrations)
          startupProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 60  # Allow up to 10 minutes for startup + migration

          # Resource limits and requests
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            readOnlyRootFilesystem: false  # Next.js needs to write temporary files
            capabilities:
              drop:
                - ALL

      # Volumes
      volumes:
        - name: data-storage
          persistentVolumeClaim:
            claimName: pad-data-pvc
        - name: uploads-storage
          persistentVolumeClaim:
            claimName: pad-uploads-pvc

      # Pod-level settings
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
