apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-minio-setup
  namespace: gitea
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: minio-client
        image: minio/mc:latest
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Setting up MinIO for Gitea..."
          
          # Configure MinIO client
          mc alias set myminio http://minio-service.minio.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD
          
          # Create Gitea buckets
          echo "Creating Gitea buckets..."
          mc mb myminio/gitea --ignore-existing
          mc mb myminio/gitea-attachments --ignore-existing
          mc mb myminio/gitea-lfs --ignore-existing
          
          # Check if user exists
          if mc admin user info myminio $GITEA_ACCESS_KEY >/dev/null 2>&1; then
            echo "User $GITEA_ACCESS_KEY already exists"
          else
            echo "Creating user $GITEA_ACCESS_KEY..."
            mc admin user add myminio $GITEA_ACCESS_KEY $GITEA_SECRET_KEY
          fi
          
          # Create policy for Gitea buckets
          cat > /tmp/gitea-policy.json <<EOF
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListBucket",
                  "s3:GetBucketLocation"
                ],
                "Resource": [
                  "arn:aws:s3:::gitea",
                  "arn:aws:s3:::gitea-attachments",
                  "arn:aws:s3:::gitea-lfs"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:DeleteObject"
                ],
                "Resource": [
                  "arn:aws:s3:::gitea/*",
                  "arn:aws:s3:::gitea-attachments/*",
                  "arn:aws:s3:::gitea-lfs/*"
                ]
              }
            ]
          }
          EOF
          
          # Add or update policy
          mc admin policy create myminio gitea-policy /tmp/gitea-policy.json || \
          mc admin policy update myminio gitea-policy /tmp/gitea-policy.json
          
          # Attach policy to user
          mc admin policy attach myminio gitea-policy --user=$GITEA_ACCESS_KEY
          
          echo "MinIO setup for Gitea completed!"
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-root-creds
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-root-creds
              key: MINIO_ROOT_PASSWORD
        - name: GITEA_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: gitea-secret
              key: MINIO_ACCESS_KEY
        - name: GITEA_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: gitea-secret
              key: MINIO_SECRET_KEY